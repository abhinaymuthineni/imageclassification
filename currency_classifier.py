# -*- coding: utf-8 -*-
"""CURRENCY CLASSIFIER

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NxjEZS5NOCOxe0qDPbWdk6i50E0_JhT2
"""

pip install bing-image-downloader

!mkdir images

from bing_image_downloader import downloader
downloader.download("")

from google.colab import drive
drive.mount('/content/drive')

import os
import matplotlib.pyplot as plt
import numpy as np
from skimage.io import imread
from skimage.transform import resize

target=[]
images=[]
flat_data=[]

DATADIR="/content/drive/MyDrive/Train"
CATEGORIES=['1Hundrednote','2Hundrednote','2Thousandnote','5Hundrednote','Fiftynote','Tennote','Twentynote']

for category in CATAGORIES:
   #print(category)
   #label encode instead
   class_num=CATEGORIES.index(category)
   #print(class_num)
   path=os.path.join(DATADIR,category)
   #print(path)
   for img in os.listdir(path):
     img_array=imread(os.path.join(path,img))
     #print(img_array)
     #print(img_array.shape)
     #plt.imshow(img_array)
     img_resized=resize(img_array,(150,150,3))
     flat_data.append(img_resized.flatten())
     images.append(img_resized)
     target.append(class_num)

flat_data=np.array(flat_data)
target=np.array(target)
images=np.array(images)
#print(flat_data)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(flat_data,target,test_size=0.1,random_state=109)

from sklearn.model_selection import GridSearchCV
from sklearn import svm
param_grid=[
            {'C':[1,10,100,1000],'kernel':['linear']},
            {'C':[1,10,100,1000],'gamma':[0.001,0.0001],'kernel':['rbf']},
           ]
svc=svm.SVC(probability=True)
clf=GridSearchCV(svc,param_grid)
clf.fit(x_train,y_train)

#testing a new image
flat_testdata=[]
url=input("ENTER YOUR URL")
img=imread(url)
img_resized=resize(img,(150,150,3))
flat_testdata.append(img_resized.flatten())
flat_testdata=np.array(flat_testdata)
print(img.shape)
print(img_resized.shape)
plt.imshow(img_resized)
y_out=clf.predict(flat_testdata)
y_out=CATEGORIES[y_out[0]]
print(f'PREDICTED OUTPUT:{y_out}')

import pickle
pickle.dump(clf,open('img_model.p','wb'))







!pip install streamlit
!pip install pyngrok
from pyngrok import ngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# st.title("CURRENCY CLASSIFIER")

from pyngrok import ngrok
!nohup streamlit run app.py &

url = ngrok.connect(port='8501')
url